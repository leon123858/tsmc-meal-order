// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Leon Lin"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/create": {
            "post": {
                "description": "create an user account, who can log in by username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "create user api (should be admin now)",
                "parameters": [
                    {
                        "description": "body",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_model.UserCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_model.UserCreateResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "user_model.UserCreateRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "type"
            ],
            "properties": {
                "email": {
                    "description": "email",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "password": {
                    "description": "password",
                    "type": "string"
                },
                "type": {
                    "description": "使用者類型 (一般使用者, 管理者)",
                    "enum": [
                        "normal",
                        "admin"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/user_model.UserType"
                        }
                    ]
                }
            }
        },
        "user_model.UserCreateResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "user id (uid in this system)",
                    "type": "string"
                },
                "message": {
                    "description": "error message",
                    "type": "string"
                },
                "result": {
                    "description": "true: success, false: error",
                    "type": "boolean"
                }
            }
        },
        "user_model.UserType": {
            "type": "string",
            "enum": [
                "normal",
                "admin"
            ],
            "x-enum-comments": {
                "Normal": "一般使用者"
            },
            "x-enum-varnames": [
                "Normal",
                "Admin"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "127.0.0.1:8080",
	BasePath:         "/api/user",
	Schemes:          []string{},
	Title:            "meal order user API",
	Description:      "this the user service for meal order system",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
