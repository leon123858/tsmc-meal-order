basePath: /api/user
definitions:
  model.StringResponse:
    properties:
      data:
        type: string
      message:
        description: error message
        type: string
      result:
        description: 'true: success, false: error'
        type: boolean
    type: object
  model.UserCoreInformation:
    properties:
      email:
        description: email
        type: string
      uid:
        description: user id (uid in this system)
        type: string
    type: object
  model.UserCreateRequest:
    properties:
      email:
        description: email
        type: string
      name:
        description: name
        type: string
      password:
        description: password
        type: string
      type:
        allOf:
        - $ref: '#/definitions/model.UserType'
        description: 使用者類型 (一般使用者, 管理者)
        enum:
        - normal
        - admin
        - ""
    required:
    - email
    - name
    - password
    type: object
  model.UserGeneralUpdateRequest:
    properties:
      name:
        description: name
        type: string
      place:
        description: 取餐地點
        type: string
      uid:
        description: user id (uid in this system)
        type: string
    required:
    - uid
    type: object
  model.UserInfoResponse:
    properties:
      data:
        $ref: '#/definitions/model.UserInformation'
      message:
        description: error message
        type: string
      result:
        description: 'true: success, false: error'
        type: boolean
    type: object
  model.UserInformation:
    properties:
      email:
        description: email
        type: string
      name:
        description: name
        type: string
      place:
        description: 取餐地點
        type: string
      uid:
        description: user id (uid in this system)
        type: string
      userType:
        allOf:
        - $ref: '#/definitions/model.UserType'
        description: 使用者類型 (一般使用者, 管理者)
    type: object
  model.UserType:
    enum:
    - normal
    - admin
    type: string
    x-enum-comments:
      Normal: 一般使用者
    x-enum-varnames:
    - Normal
    - Admin
  service.PubSubMessage:
    properties:
      message:
        properties:
          data:
            items:
              type: integer
            type: array
          id:
            type: string
        type: object
      subscription:
        type: string
    type: object
host: 127.0.0.1:8080
info:
  contact:
    name: Leon Lin
  description: this the user service for meal order system
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: meal order user API
  version: "3.0"
paths:
  /create:
    post:
      consumes:
      - application/json
      description: create a user account, who can log in by username and password
      parameters:
      - description: body
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.UserCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: data is uid (user id in this system)
          schema:
            $ref: '#/definitions/model.StringResponse'
      summary: create user api (should be admin now)
      tags:
      - user
  /get:
    get:
      consumes:
      - application/json
      description: get user information by uid
      parameters:
      - description: uid
        in: query
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserInfoResponse'
      summary: get user api
      tags:
      - user
  /login:
    post:
      consumes:
      - application/json
      description: login by JWT token
      parameters:
      - description: JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - description: body
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.UserCoreInformation'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/model.StringResponse'
      summary: login api
      tags:
      - user
  /sync/:event:
    post:
      consumes:
      - application/json
      description: 同步 event, 由 infra handle 傳入 cloud run, 若非 200 回傳, 會觸發重試
      parameters:
      - description: body
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/service.PubSubMessage'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: string
      summary: 同步 event
      tags:
      - event
  /update:
    post:
      consumes:
      - application/json
      description: update user information by uid
      parameters:
      - description: body
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.UserGeneralUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: data is uid (user id in this system)
          schema:
            $ref: '#/definitions/model.StringResponse'
      summary: update user api
      tags:
      - user
schemes:
- http
- https
swagger: "2.0"
